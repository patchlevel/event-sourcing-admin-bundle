<dl class="divide-y divide-gray-100">
    {{ _self.text('ID', projection.id) }}
    {{ _self.text('Group', projection.group) }}
    {{ _self.text('Run mode', projection.runMode.value) }}
    {# { _self.text('Class', 'unknown') } #}
    {{ _self.text('Position', projection.position) }}
    {{ _self.text('Status', projection.status.value) }}

    {{ dump(projection) }}

    {% if projection.projectionError %}
        {% if projection.projectionError.errorContext %}
            {% for context in projection.projectionError.errorContext %}
                <div class="rounded-md bg-gray-50 p-4">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            {{ heroicon('exclamation-circle', class='h-5 w-5 text-red-800') }}
                        </div>
                        <div class="ml-3">
                            <h3 class="text-sm font-medium text-red-800">{{ context.message }}</h3>
                        </div>
                    </div>

                    {% for step in context.trace %}
                        <div><span title="{{ step.class }}">{{~ _self.shortClass(step.class) ~}}</span>{{ step.type }}{{ step.function }}({{ _self.args(step.args) }})</div>
                        <div>in {{ step.file }} (line {{ step.line }})</div>

                        {{ dump(step) }}
                    {% endfor %}
                </div>


            {% endfor %}
        {% else %}
            <div class="rounded-md bg-red-50 p-4">
                <div class="flex">
                    <div class="flex-shrink-0">
                        {{ heroicon('exclamation-circle', class='h-5 w-5 text-red-800') }}
                    </div>
                    <div class="ml-3">
                        <h3 class="text-sm font-medium text-red-800">{{ projection.projectionError.errorMessage }}</h3>
                    </div>
                </div>
            </div>
        {% endif %}
    {% endif %}

</dl>

{% macro text(name, content) %}
    <div class="p-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
        <dt class="text-sm font-medium leading-6 text-gray-900">{{ name }}</dt>
        <dd class="mt-1 text-sm leading-6 text-gray-500 sm:col-span-2 sm:mt-0">{{ content }}</dd>
    </div>
{% endmacro %}

{% macro json(name, content) %}
    <div class="p-4 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0">
        <dt class="text-sm font-medium leading-6 text-gray-900">{{ name }}</dt>
        <dd class="mt-1 text-sm leading-6 text-gray-500 sm:col-span-2 sm:mt-0">
            <div class="json">
                {{~ content ~}}
            </div>
        </dd>
    </div>
{% endmacro %}

{% macro args(args) %}
    {{ args|join(', ') }}
{% endmacro %}

{% macro shortClass(class) ~%}
    {{~ class|split('\\')|last ~}}
{%~ endmacro %}
